// Import Global Rules
@use "./sass/layout/global-rules";
// Import Pages
@use "./sass/pages/contact";
// Import Variables
@use "./sass/variables/colors" as *;
// Import Mixins
@use "./sass/helpers/mixins.scss" as *;
// Import Functions
@use "./sass/helpers/functions.scss" as *;

$alt_color: green;
.header {
    color: $alt_color;
}
.sidebar {
    background-color: $main;
}
// Nesting & Parent Elements
.parent {
    font-weight: bold;
    .child {
        font-size: 20px;
        .grand-child {
            font-size: 15px;
        }
    }
}
.parent-one,
.parent-two {
    padding: 20px;
    .child {
        padding: 10px;
    }
}
.parent > {
    .child {
        font-size: 20px;
    }
    .test {
        font-weight: bold;
    }
}
.parent {
    > .child {
        font-size: 20px;
    }
    .test {
        font-weight: bold;
    }
    + p {
        font-size: 15px;
    }
}
.parent {
    > {
        .element-one {
            font-size: 10px;
        }
        .element-two {
            font-size: 10px;
        }
    }
    .not-direct-child {
        font-weight: bold;
    }
}
.box {
    .title {
        font-size: 10px;
    }
    .description {
        font-size: 8px;
    }
    &.red {
        color: red;
    }
    &.green {
        color: green;
    }
    &:hover {
        background-color: #eee;
    }
    &:hover .title {
        font-weight: bold;
    }
    :not(&) {
        font-weight: normal;
    }
    [dir="rtl"] & {
        direction: rtl;
    }
}
// placeholder
.box {
    font-size: 20px;
    font: {
        size: 15px;
        weight: bold;
    }
    padding: 10px;
    margin: auto {
        top: 10px;
        bottom: 15px;
    }
}
%main-box {
    background-color: white;
    padding: 15px;
    border: 1px solid #ccc;
}
.ads {
    @extend %main-box;
    font-size: 20px;
    color: red;
}
.article {
    @extend %main-box;
    font-size: 22px;
    color: green;
}
// If & Else
$theme: 'light';
.page {
    @if $theme =='light' {
        background-color: white;
        color: #444;
    } @else {
        background-color: #444;
        color: white;
    }
}
$rounded: 'false';
.box {
    @extend %main-box;
    border-radius: if($rounded, 6px ,null);
}
// Practice On If & Else
$direction: 'bottom';
.arrow-div {
    @extend %main-box;
    font-size: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 300px;
    position: relative;
    margin: 50px auto;
    &::before {
        content: "";
        position: absolute;
        border: 20px solid transparent;
        @if $direction == 'top' {
            top: -40px;
            left: 50%;
            transform: translateX(-50%);
            border-bottom-color: red;
        } @else if $direction == 'right' {
            right: -40px;
            top: 50%;
            transform: translateY(-50%);
            border-left-color: red;
        } @else if $direction == 'bottom' {
            bottom: -40px;
            left: 50%;
            transform: translateX(-50%);
            border-top-color: red;
        } @else if $direction == 'left' {
            left: -40px;
            top: 50%;
            transform: translateY(-50%);
            border-right-color: red;
        } @else {
            @error "This Direction #{$direction} Is Not Valid";
        }
    }
}
// interpolation
$company: "peter";
$position: "right";
.ad-#{$company}-#{unique-id()} {
    font-size: 20px;
    background-image: url(imgs/#{$company}.png);
    #{$position}: 0;
}
.ad-#{unique-id()} {
    font-weight: bold;
}
// mixin and include
ul.links {
    @include list-reset;
}
.circle-100 {
    @include circle(100px);
    background-color: red;
    color: white;
}
.circle-200 {
    @include circle(200px);
    background-color: red;
    color: white;
}
.center-circle {
    @include circle(400px);
    @include centering;
}
// Loop For
@for $i from 1 through 10 {
    .class-#{$i} {
        font-size: #{$i + 10px};
    }
}
$dimentions: 0;
@for $i from 1 through 10 {
    .circle-#{100 + $dimentions} {
        width: $dimentions + 100px;
        height: $dimentions + 100px;
        border-radius: 50%;
    }
    $dimentions: $dimentions + 100;
}
// Each + Maps
$themes: red, green, blue, orange;
@each $theme in $themes {
    .#{$theme}-theme {
        background-color: white;
        border-bottom: 2px solid $theme;
    }
    .title {
        color: $theme;
        font-weight: bold;
    }
}
$socials: (
    "facebook": blue, 
    "youtube": red, 
    "github": black, 
    "twitter": indianred,
);
@each $name, $color in $socials {
    .#{$name} {
        background-color: $color;
        color: white;
        &::before {
            content: $name;
        }
    }
}
$classes: "one" 20px red, "two" 15px green, "three" 22px blue;
@each $class, $font, $color in $classes {
    .#{$class} {
        font-size: $font;
        background-color: $color;
        color: white;
        padding: $font / 2;
    }
}
// loop => while
$start: 1;
@while $start <= 10 {
    .width-#{$start * 100} {
        width: $start * 100px;
        height: ($start *100px) / 2;
    }
    $start: $start + 1;
}
// Create Grid System
$grid_cols: 12;
@for $i from 1 through $grid_cols {
    .col-#{$i} {
        width: percentage($i / $grid_cols);
    }
}
// Function
$width: 200px;
.element {
    width: $width;
    height: half($width);
    top: calculate(100px, 200px, 50px);
}